# Generated by Django 5.0.14 on 2025-09-19 12:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("calendars", "0004_calendarinvitation_calendarshare"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="calendarevent",
            name="combined_events",
            field=models.TextField(
                blank=True,
                help_text="Combined event names for dates with multiple events",
            ),
        ),
        migrations.CreateModel(
            name="CalendarYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        help_text="The year for calendars",
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="Default",
                        help_text="Name to identify this calendar version",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calendar_years",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-year", "name"],
                "unique_together": {("user", "year", "name")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="calendar",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="calendar",
            name="calendar_year",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional: Link to a specific calendar year version",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="calendars",
                to="calendars.calendaryear",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="calendar",
            unique_together={("user", "year", "calendar_year")},
        ),
        migrations.CreateModel(
            name="EventMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the event or person", max_length=255
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("birthday", "Birthday"),
                            ("anniversary", "Anniversary"),
                            ("holiday", "Holiday"),
                            ("appointment", "Appointment"),
                            ("reminder", "Reminder"),
                            ("custom", "Custom Event"),
                        ],
                        default="custom",
                        help_text="Type of event",
                        max_length=20,
                    ),
                ),
                (
                    "month",
                    models.IntegerField(
                        help_text="Month number (1-12)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        help_text="Day number (1-31)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(31),
                        ],
                    ),
                ),
                (
                    "year_occurred",
                    models.IntegerField(
                        blank=True,
                        help_text="Optional: The year this event originally occurred (for birthdays, anniversaries, etc.)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1900),
                            django.core.validators.MaxValueValidator(2100),
                        ],
                    ),
                ),
                (
                    "groups",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of group names this event belongs to",
                        max_length=500,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Additional details about the event"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="master_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["month", "day", "name"],
            },
        ),
        migrations.AddField(
            model_name="calendarevent",
            name="master_event",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional: Link to a master event",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="calendar_events",
                to="calendars.eventmaster",
            ),
        ),
        migrations.CreateModel(
            name="UserEventPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "add_to_master_list",
                    models.CharField(
                        choices=[
                            ("always", "Always add to master list"),
                            ("ask", "Ask me each time"),
                            ("never", "Never add to master list"),
                        ],
                        default="ask",
                        help_text="When creating calendar events, how to handle master list",
                        max_length=10,
                    ),
                ),
                (
                    "default_groups",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of default groups for new master events",
                        max_length=500,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the event group", max_length=100
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of this event group"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("user", "name")},
            },
        ),
    ]
